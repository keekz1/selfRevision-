{"version":3,"sources":["components/NoteList.js","components/Section.js","components/NoteEditor.js","components/Navigation.js","components/ReactOverview.js","App.js","reportWebVitals.js","index.js"],"names":["NoteList","_ref","notes","React","createElement","className","length","map","note","index","key","Section","title","NoteEditor","addNote","content","setContent","useState","onSubmit","event","preventDefault","trim","value","onChange","target","placeholder","type","Navigation","sections","onSectionChange","section","onClick","createContext","ReactOverview","App","setSections","Python","Java","TypeScript","currentSection","setCurrentSection","useEffect","storedSections","JSON","parse","localStorage","getItem","setItem","stringify","Router","Object","keys","Routes","Route","path","element","Fragment","prevSections","[object Object]","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.0f4c6df9.chunk.js","sourcesContent":["// src/components/NoteList.js\r\nimport React from 'react';\r\n\r\nconst NoteList = ({ notes }) => (\r\n  <ul className=\"note-list\">\r\n    {notes.length > 0 ? (\r\n      notes.map((note, index) => (\r\n        <li key={index}>{note}</li>\r\n      ))\r\n    ) : (\r\n      <li>No notes available.</li>\r\n    )}\r\n  </ul>\r\n);\r\n\r\nexport default NoteList;\r\n","// src/components/Section.js\r\nimport React from 'react';\r\nimport NoteList from './NoteList';\r\n\r\nconst Section = ({ title, notes }) => (\r\n  <div className=\"section\">\r\n    <h2>{title}</h2>\r\n    <NoteList notes={notes} />\r\n  </div>\r\n);\r\n\r\nexport default Section;\r\n","// src/components/NoteEditor.js\r\nimport React, { useState } from 'react';\r\n\r\nconst NoteEditor = ({ addNote }) => {\r\n  const [content, setContent] = useState('');\r\n\r\n  // Handle content change in the textarea\r\n  const handleChange = (event) => {\r\n    setContent(event.target.value);\r\n  };\r\n\r\n  // Handle form submission\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    if (content.trim()) {\r\n      addNote(content);\r\n      setContent('');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"note-editor\">\r\n      <form onSubmit={handleSubmit}>\r\n        <textarea\r\n          value={content}\r\n          onChange={handleChange}\r\n          placeholder=\"Write your note here...\"\r\n        />\r\n        <button type=\"submit\">Save Note</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NoteEditor;\r\n","// src/components/Navigation.js\r\nimport React from 'react';\r\n\r\nconst Navigation = ({ sections, onSectionChange }) => (\r\n  <nav className=\"navigation\">\r\n    {sections.map((section) => (\r\n      <button\r\n        key={section}\r\n        onClick={() => onSectionChange(section)}\r\n      >\r\n        {section}\r\n      </button>\r\n    ))}\r\n  </nav>\r\n);\r\n\r\nexport default Navigation;\r\n","import React, { useState, useEffect, useContext, createContext } from 'react';\r\nimport { BrowserRouter as Router, Route, Switch, Link } from 'react-router-dom';\r\n\r\n// Context for the example\r\nconst MyContext = createContext();\r\n\r\nconst ReactOverview = () => (\r\n  <div className=\"ReactOverview\">\r\n    <h1>React Overview</h1>\r\n\r\n    <div className=\"section\">\r\n      <h2>1. Introduction to React</h2>\r\n      <p>\r\n        React is a JavaScript library for building user interfaces, particularly single-page applications where you need a dynamic and responsive user experience.\r\n      </p>\r\n    </div>\r\n\r\n    <div className=\"section\">\r\n      <h2>2. Components</h2>\r\n      <p>\r\n        React applications are built using components. A component is a reusable, self-contained piece of code that defines how a section of the UI should appear.\r\n      </p>\r\n\r\n      <h3>Functional Components</h3>\r\n      <pre>\r\n        <code>{`function Welcome(props) {\r\n  return <h1>Hello, {props.name}</h1>;\r\n}`}</code>\r\n      </pre>\r\n\r\n      <h3>Class Components</h3>\r\n      <pre>\r\n        <code>{`class Welcome extends React.Component {\r\n  render() {\r\n    return <h1>Hello, {this.props.name}</h1>;\r\n  }\r\n}`}</code>\r\n      </pre>\r\n    </div>\r\n\r\n    <div className=\"section\">\r\n      <h2>3. JSX (JavaScript XML)</h2>\r\n      <p>\r\n        JSX is a syntax extension that allows you to write HTML-like code within JavaScript. Itâ€™s used to describe what the UI should look like.\r\n      </p>\r\n      <pre>\r\n        <code>{`const element = <h1>Hello, world!</h1>;`}</code>\r\n      </pre>\r\n    </div>\r\n\r\n    <div className=\"section\">\r\n      <h2>4. Props</h2>\r\n      <p>\r\n        Props (short for properties) are read-only attributes passed from a parent component to a child component.\r\n      </p>\r\n      <pre>\r\n        <code>{`function Greeting(props) {\r\n  return <h1>Hello, {props.name}</h1>;\r\n}\r\n\r\n<Greeting name=\"Alice\" />`}</code>\r\n      </pre>\r\n    </div>\r\n\r\n    <div className=\"section\">\r\n      <h2>5. State</h2>\r\n      <p>\r\n        State is a built-in object used to manage data that changes over time within a component.\r\n      </p>\r\n\r\n      <h3>Functional Components (using Hooks)</h3>\r\n      <pre>\r\n        <code>{`import React, { useState } from 'react';\r\n\r\nfunction Counter() {\r\n  const [count, setCount] = useState(0);\r\n\r\n  return (\r\n    <div>\r\n      <p>You clicked {count} times</p>\r\n      <button onClick={() => setCount(count + 1)}>Click me</button>\r\n    </div>\r\n  );\r\n}`}</code>\r\n      </pre>\r\n\r\n      <h3>Class Components</h3>\r\n      <pre>\r\n        <code>{`class Counter extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { count: 0 };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <p>You clicked {this.state.count} times</p>\r\n        <button onClick={() => this.setState({ count: this.state.count + 1 })}>Click me</button>\r\n      </div>\r\n    );\r\n  }\r\n}`}</code>\r\n      </pre>\r\n    </div>\r\n\r\n    <div className=\"section\">\r\n      <h2>6. Event Handling</h2>\r\n      <p>\r\n        React handles events similarly to DOM events but uses camelCase syntax.\r\n      </p>\r\n      <pre>\r\n        <code>{`function handleClick() {\r\n  alert('Button was clicked!');\r\n}\r\n\r\nfunction MyButton() {\r\n  return <button onClick={handleClick}>Click Me</button>;\r\n}`}</code>\r\n      </pre>\r\n    </div>\r\n\r\n    <div className=\"section\">\r\n      <h2>7. Lifecycle Methods (Class Components)</h2>\r\n      <p>\r\n        Lifecycle methods are called at different stages of a componentâ€™s lifecycle.\r\n      </p>\r\n      <pre>\r\n        <code>{`class MyComponent extends React.Component {\r\n  componentDidMount() {\r\n    console.log('Component did mount');\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    console.log('Component did update');\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    console.log('Component will unmount');\r\n  }\r\n\r\n  render() {\r\n    return <div>Hello</div>;\r\n  }\r\n}`}</code>\r\n      </pre>\r\n    </div>\r\n\r\n    <div className=\"section\">\r\n      <h2>8. Hooks (Functional Components)</h2>\r\n      <p>\r\n        Hooks are functions that let you use state and other React features without writing a class.\r\n      </p>\r\n\r\n      <h3>Common Hooks</h3>\r\n      <pre>\r\n        <code>{`import React, { useState, useEffect } from 'react';\r\n\r\nfunction Example() {\r\n  const [count, setCount] = useState(0);\r\n\r\n  useEffect(() => {\r\n    document.title = \\`You clicked \\${count} times\\`;\r\n  }, [count]);\r\n\r\n  return (\r\n    <div>\r\n      <p>You clicked {count} times</p>\r\n      <button onClick={() => setCount(count + 1)}>Click me</button>\r\n    </div>\r\n  );\r\n}`}</code>\r\n      </pre>\r\n    </div>\r\n\r\n    <div className=\"section\">\r\n      <h2>9. Context API</h2>\r\n      <p>\r\n        The Context API allows you to pass data through the component tree without having to pass props manually at every level.\r\n      </p>\r\n\r\n      <h3>Create Context</h3>\r\n      <pre>\r\n        <code>{`const MyContext = React.createContext();`}</code>\r\n      </pre>\r\n\r\n      <h3>Provide Context</h3>\r\n      <pre>\r\n        <code>{`function App() {\r\n  return (\r\n    <MyContext.Provider value=\"someValue\">\r\n      <Child />\r\n    </MyContext.Provider>\r\n  );\r\n}`}</code>\r\n      </pre>\r\n\r\n      <h3>Consume Context</h3>\r\n      <pre>\r\n        <code>{`function Child() {\r\n  const value = useContext(MyContext);\r\n  return <p>{value}</p>;\r\n}`}</code>\r\n      </pre>\r\n    </div>\r\n\r\n    <div className=\"section\">\r\n      <h2>10. Routing (using React Router)</h2>\r\n      <p>\r\n        React Router is used for handling routing in React applications.\r\n      </p>\r\n\r\n      <h3>Basic Setup</h3>\r\n      <pre>\r\n        <code>{`npm install react-router-dom`}</code>\r\n      </pre>\r\n\r\n      <h3>Usage</h3>\r\n      <pre>\r\n        <code>{`import { BrowserRouter as Router, Route, Switch, Link } from 'react-router-dom';\r\n\r\nfunction Home() {\r\n  return <h2>Home</h2>;\r\n}\r\n\r\nfunction About() {\r\n  return <h2>About</h2>;\r\n}\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <nav>\r\n        <ul>\r\n          <li><Link to=\"/\">Home</Link></li>\r\n          <li><Link to=\"/about\">About</Link></li>\r\n        </ul>\r\n      </nav>\r\n      <Switch>\r\n        <Route path=\"/\" exact component={Home} />\r\n        <Route path=\"/about\" component={About} />\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}`}</code>\r\n      </pre>\r\n    </div>\r\n\r\n    <div className=\"section\">\r\n      <h2>11. Handling Forms</h2>\r\n      <p>\r\n        React provides a way to manage form inputs and handle form submissions.\r\n      </p>\r\n      <pre>\r\n        <code>{`function Form() {\r\n  const [inputValue, setInputValue] = useState('');\r\n\r\n  const handleChange = (event) => {\r\n    setInputValue(event.target.value);\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    alert('A name was submitted: ' + inputValue);\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <label>\r\n        Name:\r\n        <input type=\"text\" value={inputValue} onChange={handleChange} />\r\n      </label>\r\n      <button type=\"submit\">Submit</button>\r\n    </form>\r\n  );\r\n}`}</code>\r\n      </pre>\r\n    </div>\r\n\r\n    <div className=\"section\">\r\n      <h2>12. Error Boundaries</h2>\r\n      <p>\r\n        Error boundaries are React components that catch JavaScript errors anywhere in their child component tree, log those errors, and display a fallback UI.\r\n      </p>\r\n      <pre>\r\n        <code>{`class ErrorBoundary extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { hasError: false };\r\n  }\r\n\r\n  static getDerivedStateFromError() {\r\n    return { hasError: true };\r\n  }\r\n\r\n  componentDidCatch(error, errorInfo) {\r\n    console.error(\"Error occurred:\", error, errorInfo);\r\n  }\r\n\r\n  render() {\r\n    if (this.state.hasError) {\r\n      return <h1>Something went wrong.</h1>;\r\n    }\r\n\r\n    return this.props.children; \r\n  }\r\n}`}</code>\r\n      </pre>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default ReactOverview;\r\n","// src/App.js\nimport React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Route, Routes, Link } from 'react-router-dom';\nimport Section from './components/Section';\nimport NoteEditor from './components/NoteEditor';\nimport Navigation from './components/Navigation';\nimport ReactOverview from './components/ReactOverview';\nimport './App.css';\n\nfunction App() {\n  const [sections, setSections] = useState({\n    Python: [],\n    Java: [],\n    TypeScript: [],\n    React: [],\n  });\n  const [currentSection, setCurrentSection] = useState('Python');\n\n  const addNote = (content) => {\n    setSections((prevSections) => ({\n      ...prevSections,\n      [currentSection]: [...prevSections[currentSection], content],\n    }));\n  };\n\n  useEffect(() => {\n    const storedSections = JSON.parse(localStorage.getItem('sections'));\n    if (storedSections) {\n      setSections(storedSections);\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem('sections', JSON.stringify(sections));\n  }, [sections]);\n\n  return (\n    <Router>\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <Navigation\n            sections={Object.keys(sections)}\n            onSectionChange={setCurrentSection}\n          />\n          <Routes>\n            <Route path=\"/react-overview\" element={<ReactOverview />} />\n            <Route\n              path=\"/\"\n              element={\n                <>\n                  <Section\n                    title={currentSection}\n                    notes={sections[currentSection]}\n                  />\n                  <NoteEditor addNote={addNote} />\n                </>\n              }\n            />\n          </Routes>\n        </header>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}